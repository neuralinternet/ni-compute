"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"
    Test decryption security with mismatched keys.

    Verifies that:
    - Attempting to decrypt a message with the wrong private key raises an exception
    - The encryption system properly enforces key pair matching
    ","81","test_decrypt_with_wrong_key","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","","test_rsa_encryption","",""
"
    Test the complete encryption and decryption cycle.

    Verifies that:
    - A message can be encrypted using the public key
    - The encrypted data is in bytes format
    - The original message can be recovered through decryption
    - The decrypted message matches the original input
    ","58","test_encrypt_decrypt","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","","test_rsa_encryption","",""
"
        get_docker:
        Raises an exception if Docker client initialization fails.
        ","1","test_get_docker_exception","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestGetDocker","test_miner_container","",""
"
        check_container:
        Returns True when a regular container (with name ""container"") is running.
        ","1","test_check_container_running","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestCheckContainer","test_miner_container","",""
"
        kill_container:
        When deregister=True, looks for and removes both test and regular containers.
        ","4","test_kill_container_deregister_true_with_both_containers","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestKillContainer","test_miner_container","",""
"
        check_container:
        Returns True when a test container (with name ""test_container"") is running.
        ","1","test_check_container_test_running","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestCheckContainer","test_miner_container","",""
"
        unpause_container:
        Returns False if no allocation key is retrieved.
        ","0","test_unpause_container_no_allocation_key","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestUnpauseContainer","test_miner_container","",""
"
        get_docker:
        Raises an exception if listing containers fails.
        ","1","test_get_docker_list_exception","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestGetDocker","test_miner_container","",""
"
        kill_container:
        Removes a regular container that is not running.
        ","2","test_kill_container_regular_not_running","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestKillContainer","test_miner_container","",""
"
        pause_container:
        Returns False when no container with the expected name is found.
        ","1","test_pause_container_not_found","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestPauseContainer","test_miner_container","",""
"
        pause_container:
        Returns False if no allocation key is retrieved.
        ","0","test_pause_container_no_allocation_key","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestPauseContainer","test_miner_container","",""
"
        kill_container:
        Kills a running regular container.
        ","2","test_kill_container_regular_running","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestKillContainer","test_miner_container","",""
"
    Test RSA key pair generation.

    Verifies that:
    - Both private and public keys are generated successfully
    - Keys are returned as strings
    - Keys have the correct PEM format headers
    ","40","test_generate_key_pair","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","","test_rsa_encryption","",""
"
        set_docker_base_size:
        Verifies that the function writes the correct JSON content to /etc/docker/daemon.json
        and calls subprocess.run to restart Docker.
        ","3","test_set_docker_base_size","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestSetDockerBaseSize","test_miner_container","",""
"
        get_docker:
        Initializes the Docker client and lists containers successfully.
        ","1","test_get_docker_success","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestGetDocker","test_miner_container","",""
"
        unpause_container:
        Returns False when an exception occurs in get_docker.
        ","1","test_unpause_container_exception","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestUnpauseContainer","test_miner_container","",""
"
        unpause_container:
        Unpauses the container when the allocation key is valid.
        ","1","test_unpause_container_success","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestUnpauseContainer","test_miner_container","",""
"
        unpause_container:
        Returns False when the provided allocation key does not match.
        ","0","test_unpause_container_key_mismatch","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestUnpauseContainer","test_miner_container","",""
"
        kill_container:
        Does nothing if no matching container is found.
        ","2","test_kill_container_not_found","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestKillContainer","test_miner_container","",""
"
        pause_container:
        Returns False when the provided allocation key does not match.
        ","1","test_pause_container_key_mismatch","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestPauseContainer","test_miner_container","",""
"
        check_container:
        Returns False when the container name does not match the expected value.
        ","1","test_check_container_not_running","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestCheckContainer","test_miner_container","",""
"
        kill_container:
        Removes a test container that is not running.
        ","1","test_kill_container_test_not_running","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestKillContainer","test_miner_container","",""
"
        pause_container:
        Pauses the container when the allocation key is valid.
        ","2","test_pause_container_success","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestPauseContainer","test_miner_container","",""
"
        pause_container:
        Returns False when an exception occurs in get_docker.
        ","1","test_pause_container_exception","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestPauseContainer","test_miner_container","",""
"
        check_container:
        Returns False when an exception is raised during Docker access.
        ","1","test_check_container_exception","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestCheckContainer","test_miner_container","",""
"
        kill_container:
        When deregister=False, only looks for and removes the test container.
        ","3","test_kill_container_deregister_false","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestKillContainer","test_miner_container","",""
"
        kill_container:
        Kills a running test container.
        ","3","test_kill_container_test_running","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestKillContainer","test_miner_container","",""
"
        unpause_container:
        Returns False when no container with the expected name is found.
        ","1","test_unpause_container_not_found","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestUnpauseContainer","test_miner_container","",""
"
        run_container:
        Should successfully run a new container when all dependencies are met and
        container.status is 'created'. Returns a dict with status True and the encrypted info.
        ","10","test_run_container_success","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestRunContainer","test_miner_container","",""
"
        kill_container:
        Returns False when get_docker raises an exception.
        ","1","test_kill_container_exception","tests","Sun Jun 22 22:59:37 GMT 2025","passed","Sun Jun 22 22:59:37 GMT 2025","TestKillContainer","test_miner_container","",""
